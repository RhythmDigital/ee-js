package com.wehaverhythm.terry.voter{	import com.greensock.TweenMax;	import com.greensock.easing.Sine;	import com.wehaverhythm.utils.AutoTextResizer;		import flash.display.BlendMode;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;
			public class VotesDisplay extends Sprite	{		private var bgSprite:Sprite;		private var bgColour:uint = 0x333333;		protected var totalPlayers:int;		protected var answeredCount:int;		protected var questionText:AutoTextResizer;				public function VotesDisplay()		{			this.blendMode = BlendMode.LAYER;						hide(0);			totalPlayers = 0;			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);						if(questionPosition) questionPosition.visible = false;		}				public function registerVote(vote:String):void		{			answeredCount ++;			updateQuestionStatus();		}				public function reset():void		{			hide();			answeredCount = 0;		}				public function updatePlayerCount(totalPlayers:int):void		{			this.totalPlayers = totalPlayers;			updateQuestionStatus();		}				public function show(q:Object, questionNumber:int, totalQuestions:int):void		{			TweenMax.to(this, .5, {autoAlpha:1, ease:Sine.easeIn});			answeredCount = 0;			updateQuestionStatus();						if(questionPosition && !questionText)			{				questionText = new AutoTextResizer(questionPosition, 0);				addChild(questionText);			}		}				public function setStatusText(answeredCount:int, totalPlayers:int):void		{			// override and set text!		}				private function updateQuestionStatus():void		{			setStatusText(answeredCount, totalPlayers);		}						public function showGraph():void		{			//		}				protected function hide(dur:Number=.5):void		{			TweenMax.to(this, dur, {autoAlpha:0, ease:Sine.easeIn});		}				public function get timerPosition():MovieClip		{			if(this["timerPlaceholder"] != null) {				return this["timerPlaceholder"];			} else {				throw(new Error("Can't find a timer placeholder in "+this+"!"));			}		}				public function get questionPosition():MovieClip		{			if(this["textPosition"] != null) {				return this["textPosition"];			} else {				return null;			} 		}				protected function onAddedToStage(e:Event):void		{			backgroundColour = bgColour;		}				private function set backgroundColour(colour:uint):void		{			bgColour = colour;						if(stage == null) {				return;			}						with(graphics)			{				clear();				beginFill(bgColour, 1);				drawRect(0,0,stage.stageWidth,stage.stageHeight);				endFill();			}		}	}}